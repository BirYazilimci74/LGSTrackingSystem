// <auto-generated />
using System;
using LGSTrackingSystem.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LGSTrackingSystem.Repositories.Migrations
{
    [DbContext(typeof(LGSTrackingDBContext))]
    partial class LGSTrackingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnglishCorrect")
                        .HasColumnType("int");

                    b.Property<int>("EnglishIncorrect")
                        .HasColumnType("int");

                    b.Property<decimal>("EnglishNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("EnteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HistoryCorrect")
                        .HasColumnType("int");

                    b.Property<int>("HistoryIncorrect")
                        .HasColumnType("int");

                    b.Property<decimal>("HistoryNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("MathCorrect")
                        .HasColumnType("int");

                    b.Property<int>("MathIncorrect")
                        .HasColumnType("int");

                    b.Property<decimal>("MathNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ReligionCorrect")
                        .HasColumnType("int");

                    b.Property<int>("ReligionIncorrect")
                        .HasColumnType("int");

                    b.Property<decimal>("ReligionNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ScienceCorrect")
                        .HasColumnType("int");

                    b.Property<int>("ScienceIncorrect")
                        .HasColumnType("int");

                    b.Property<decimal>("ScienceNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TurkishCorrect")
                        .HasColumnType("int");

                    b.Property<int>("TurkishIncorrect")
                        .HasColumnType("int");

                    b.Property<decimal>("TurkishNet")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Admin", b =>
                {
                    b.HasOne("LGSTrackingSystem.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Exam", b =>
                {
                    b.HasOne("LGSTrackingSystem.Domain.Models.Student", "Student")
                        .WithMany("Exams")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Student", b =>
                {
                    b.HasOne("LGSTrackingSystem.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LGSTrackingSystem.Domain.Models.Student", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
